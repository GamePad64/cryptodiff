/*
 * You may redistribute this program and/or modify it under the terms of
 * the GNU General Public License as published by the Free Software Foundation,
 * either version 3 of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

syntax = "proto2";

/*
 * class Block {
public:
	std::array<char, SHASH_LENGTH> encrypted_hash;	// 28 bytes
	uint32_t blocksize;	// 4 bytes
	std::array<char, AES_BLOCKSIZE> iv;	// 16 bytes

	struct Encrypted {
		weakhash_t weak_hash;	// 4 bytes
		std::array<char, SHASH_LENGTH> strong_hash;	// 28 bytes
	};
	std::array<char, sizeof(Encrypted)> encrypted_data;
	Encrypted decrypted_data;
};
 */

//package librevault;

message EncFileMap_s {
	optional uint32 maxblocksize = 2;
	optional uint32 minblocksize = 3;
	message Block_s {
		optional bytes encrypted_hash = 1;
		optional uint32 blocksize = 2;
		optional bytes iv = 3;

		optional bytes encrypted_hashes = 4;
	}
	repeated Block_s blocks = 1;
}
